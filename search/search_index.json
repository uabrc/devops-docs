{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to UAB Research Computing Docs","text":"<p>Welcome to UAB Research Computing DevOps Docs!</p> <p>The Research Computing System (RCS) provides a framework for sharing data, accessing compute power, and collaborating with peers on campus and around the globe. Our goal is to construct a dynamic \"network of services\" that you can use to organize, study and share research data and analyses at UAB. These are the Development and Operation docs that help make all that happen.</p> <p>Research Computing provides services to researchers in these core areas:</p> <ul> <li>Data Analysis: using the High Performance Computing (HPC) fabric for batch data processing.</li> <li>Data Sharing: supporting trusted information exchange to spark new ideas via our system.</li> <li>Application Development: providing virtual machines and web-hosted development tools empowering researchers via our RC Cloud.</li> </ul>"},{"location":"#contact-us","title":"Contact Us","text":"<p>To create a support ticket please reach out to us via email at support@listserv.uab.edu.</p>"},{"location":"#support-and-development","title":"Support and Development","text":"<p>RCS is developed and supported by UAB IT's Research Computing Group. We are developing a core set of applications to help you to easily incorporate our services into your research processes and this documentation collection to help you leverage the resources already available. We follow the best practices of the Open Source community and develop our software in an open-source fashion.</p> <p>RCS is an out growth of the UABgrid pilot, launched in September 2007 which has focused on demonstrating the utility of centralized analysis, storage, and application for research. RCS is built on the same technology foundations used by major cloud vendors and decades of distributed systems computing research, technology that powered the last ten years of large scale systems serving prominent national and international initiatives like the Open Science Grid, XSEDE, the LHC Computing Grid, and NCIP.</p>"},{"location":"#outreach","title":"Outreach","text":"<p>The UAB IT Research Computing Group has collaborated with a number of prominent research projects at UAB to identify use cases and develop requirements. Our collaborators include, but are not limited to, the Center for Clinical and Translational Science (CCTS), Heflin Genomics Center, the Comprehensive Cancer Center (CCC), the Department of Computer and Information Sciences (CIS), the Department of Mechanical Engineering (ME), Lister Hill Library, the School of Optometry's Center for the Development of Functional Imaging, and Health System Information Services (HSIS).</p> <p>As part of the process of building RC, the UAB IT Research Computing group has hosted an annual campus symposium on research computing and cyber-infrastructure (CI) developments and accomplishments. Starting as CyberInfrastructure (CI) Days in 2007, the name was changed to <code>UAB Research Computing Day</code> in 2011 to reflect the broader mission to support research. IT Research Computing also participates in other campus wide symposiums including UAB Research Core Day.</p>"},{"location":"cheaha/archiving_modules/","title":"Archive old modules from LMOD path","text":"<p>This is the proposed method to archive modulefiles for old softwares that we don't want visible on Cheaha</p> <ul> <li>Login as the <code>build</code> user.</li> <li>Go to the modulefile path for that particular software. </li> <li>Create an <code>.archive</code> folder in that location.   <pre><code>mkdir .archive\n</code></pre></li> <li>Move the modulefiles you want to archive in the <code>.archive</code> directory.   <pre><code>mv archived_modulefile.lua .archive\n</code></pre></li> <li>Update the LMOD cache.   <pre><code>update-lmod-cache.sh\n</code></pre></li> </ul>"},{"location":"cheaha/shell_commands/","title":"Shell Commands","text":""},{"location":"cheaha/shell_commands/#message-a-user","title":"Message a User","text":"<p>The <code>write</code> command can be used to message a user on the same node. The command takes 2 arguments, the <code>USER</code> followed by the user's terminal. Ex: <code>write blaze pts/3</code></p> <p>The command allows you to enter one or more lines of text and is sent by pressing <code>CTRL D</code>.</p> <p>The following command will message the user on all of their terminals:</p> <pre><code>user=blaze\nfor term in $(w $user | grep $user | awk '{print $2}'); do\n  echo \"Please do not run jobs on the login node\" | write $user $term;\ndone\n</code></pre>"},{"location":"cheaha/shell_commands/#extend-timelimit-for-a-job","title":"Extend TimeLimit for a Job","text":"<p>Occassionaly, we will get a request from a user to extend the <code>TimeLimit</code> for a job(s).</p> <p><code>TimeLimit=&lt;time&gt;</code> The job's time limit. Output format is <code>[days-]hours:minutes:seconds</code> or \"<code>UNLIMITED</code>\". Input format (for update command) set is <code>minutes</code>, <code>minutes:seconds</code>, <code>hours:minutes:seconds</code>, <code>days-hours</code>, <code>days-hours:minutes</code> or <code>days-hours:minutes:seconds</code>. Time resolution is one minute and second values are rounded up to the next minute. If changing the time limit of a job, either specify a new time limit value or precede the time and equal sign with a \"<code>+</code>\" or \"<code>-</code>\" to increment or decrement the current time limit (e.g. \"<code>TimeLimit+=30</code>\"). In order to increment or decrement the current time limit, the JobId specification must precede the <code>TimeLimit</code> specification. Note that incrementing or decrementing the time limit for a job array is only allowed before the job array has been split into more than one job record. </p> <p>Example: Extend the <code>TimeLimit</code> for three jobs by 10 more days</p> <p><pre><code>for job in 15202444 15202445 15202446; do\n  scontrol show job $job | grep TimeLimit | awk '{print $2}'\n  scontrol update jobid=$job TimeLimit=+10-00\n  scontrol show job $job | grep TimeLimit | awk '{print $2}'\ndone\n</code></pre> Note: Job Arrays can't be incremented / decremented and must modified with absolute runtimes. For example, to extend a job with a <code>TimeLimit</code> of 1 day 2 hours by an additional day, you would use <code>TimeLimit=2-02:00:00</code></p>"},{"location":"cheaha/shell_commands/#fix-user-directories-and-slurm-account","title":"Fix User Directories and Slurm Account","text":"<p>The following is code you can use to fix, if necessary, one or more users directories and Slurm accounts.</p> <p>You can either specify the number of users to <code>tail</code> from <code>getent passwd</code> to fix/verify the X most recently created accounts. Alternately, comment out the first <code>users=</code>, uncomment the second <code>users=</code> and add users space delimited</p> <pre><code>num_users=20\nusers=\"$(getent passwd | tail -n ${num_users} | awk -F: '{print $1}' | tr '\\n' ' ')\"\n#users='blaze uabrules'\n#users=\"`echo ${users} | tr '[:upper:]' '[:lower:]'`\"\n\nfor user in `echo $users` ; do\n  echo $user\n  sudo /cm/shared/apps/slurm/current/bin/sacctmgr --immediate add Account $user\n  sudo /cm/shared/apps/slurm/current/bin/sacctmgr --immediate add User Accounts=$user $user\n\n  dir=/home/$user\n  if [ ! -d $dir ]; then\n    echo \"Creating directory $dir\"\n    sudo cp -a /etc/skel $dir\n    sudo chown -R ${user}:${user} $dir\n    sudo chmod 700 $dir\n  else\n    sudo chown -R ${user}:${user} $dir\n    sudo chmod 700 $dir\n  fi\n  unset dir\n  for dir in /data/user/$user /scratch/$user /data/temporary-scratch/$user; do\n    if [ ! -d $dir ]; then\n      echo \"Creating directory $dir\"\n      sudo mkdir $dir\n      sudo chown ${user}:${user} $dir\n      sudo chmod 700 $dir\n    else\n      sudo chown -R ${user}:${user} $dir\n      sudo chmod 700 $dir\n    fi\n  done\n\n  for dir in /home/$user /data/user/$user /scratch/$user /data/temporary-scratch/$user; do\n    ls -ld $dir\n  done\ndone\n\nunset users num_users\n</code></pre>"},{"location":"gitlab_runner/personal_gitlab_runner_setup/","title":"Setting up personal GitLab runner","text":"<p>This document provides instructions on setting up your own personal gitlab runner</p>"},{"location":"gitlab_runner/personal_gitlab_runner_setup/#initiate-gitlab-runner","title":"Initiate gitlab runner","text":"<ul> <li>On the project, where you need to setup GitLab runner goto Settings -&gt; CICD -&gt; Runners (Expand)</li> <li>Click on <code>New project Runner</code> as shown below:     </li> <li>Give a name to the runner, and some tags, and click on <code>Create Runner</code></li> </ul>"},{"location":"gitlab_runner/personal_gitlab_runner_setup/#setup-runner-machine","title":"Setup runner machine","text":"<ul> <li>Create a VM on OpenStack</li> <li>SSH onto the VM</li> </ul>"},{"location":"gitlab_runner/personal_gitlab_runner_setup/#install-gitlab-runner","title":"Install GitLab runner","text":"<ul> <li> <p>Download the binary for your system    <pre><code>sudo curl -L --output /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64\n</code></pre></p> </li> <li> <p>Give it permission to execute <pre><code>   sudo chmod +x /usr/local/bin/gitlab-runner\n</code></pre></p> </li> <li> <p>Create a GitLab Runner user <pre><code>sudo useradd --comment 'GitLab Runner' --create-home gitlab-runner --shell /bin/bash\n</code></pre></p> </li> <li> <p>Install and run as a service <pre><code>sudo gitlab-runner install --user=gitlab-runner --working-directory=/home/gitlab-runner\nsudo gitlab-runner start\n</code></pre></p> </li> </ul>"},{"location":"gitlab_runner/personal_gitlab_runner_setup/#register-runner","title":"Register runner","text":"<ul> <li>From the <code>Register runner</code> page copy the code from 1st step: <pre><code>sudo gitlab-runner register  --url $GITLAB_INSTANCE_URL  --token $TOKEN\n</code></pre></li> <li>While registering the runner, give the local name for your runner.</li> <li>You can choose any executor for the runner, in this case we would choose docker as the executor.</li> </ul>"},{"location":"gitlab_runner/personal_gitlab_runner_setup/#start-runner","title":"Start runner","text":"<p>You can manually verify that the runner is available to pick up jobs. <pre><code>sudo gitlab-runner start\n</code></pre></p>"},{"location":"gitlab_runner/personal_gitlab_runner_setup/#install-docker-engine-on-runner","title":"Install docker engine on runner","text":"<p>Since we used docker executor we need to setup a docker engine on the runner machine. Follwoing instructions are for installing it on ubuntu 22.04</p>"},{"location":"gitlab_runner/personal_gitlab_runner_setup/#add-dockers-official-gpg-key","title":"Add Docker's official GPG key:","text":"<pre><code>sudo apt-get update\nsudo apt-get install ca-certificates curl gnupg\nsudo install -m 0755 -d /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\nsudo chmod a+r /etc/apt/keyrings/docker.gpg\n</code></pre>"},{"location":"gitlab_runner/personal_gitlab_runner_setup/#add-the-repository-to-apt-sources","title":"Add the repository to Apt sources:","text":"<pre><code>echo \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo \"$VERSION_CODENAME\") stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\n</code></pre>"},{"location":"gitlab_runner/personal_gitlab_runner_setup/#install-the-latest-version-of-docker-engine","title":"Install the latest version of docker engine","text":"<pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre>"},{"location":"gitlab_runner/personal_gitlab_runner_setup/#verify-that-docker-is-running","title":"Verify that docker is running","text":"<pre><code>sudo docker run hello-world\n</code></pre>"},{"location":"gitlab_runner/personal_gitlab_runner_setup/#verify-runner-is-running-via-gitlab","title":"Verify runner is running via GitLab","text":"<ul> <li>On the project, where you setup GitLab runner goto Settings -&gt; CICD -&gt; Runners (Expand)</li> <li>If all the steps have succeeded, then you should see a green symbol next to the runner that you created. </li> </ul>"},{"location":"openstack/vm_migration/","title":"Virtual Machine migration from one project to another","text":"<p>These instructions help in facilitating migration of a virtual machine from one project to another within OpenStack environment.</p>"},{"location":"openstack/vm_migration/#preparing-of-vm","title":"Preparing of VM","text":"<p>Your virtual machine needs to be in Shut Down state before we start snapshotting the machine, so that there isn't a state change on the machine during the process. </p> <p>You can shut down the VM through the web interface.</p>"},{"location":"openstack/vm_migration/#create-a-snapshot-of-the-vm","title":"Create a snapshot of the VM","text":""},{"location":"openstack/vm_migration/#via-cli","title":"Via CLI","text":"<ul> <li>List the servers in your current project   <pre><code>openstack server list\n</code></pre></li> <li>Create a snapshot   <pre><code>openstack server image create myInstance --name myInstanceSnapshot\n</code></pre></li> <li>Check if the snapshot is in the list of images and in active status.   <pre><code>openstack image list\n</code></pre></li> </ul>"},{"location":"openstack/vm_migration/#via-web-interface","title":"Via Web Interface","text":"<p>Follow the instructions here</p>"},{"location":"openstack/vm_migration/#download-the-snapshot","title":"Download the snapshot","text":"<p>Copy the ID of snapshot you just took and use it below in place of myInstanceSnapshotID <pre><code>openstack image save --file snapshot.raw myInstanceSnapshotID\n</code></pre></p>"},{"location":"openstack/vm_migration/#import-snapshot-into-the-new-project","title":"Import snapshot into the new project","text":""},{"location":"openstack/vm_migration/#via-cli_1","title":"Via CLI","text":"<ul> <li>Source openrc file for the new project</li> <li>Import snapshot   <pre><code> openstack image create myInstanceSnapshot --disk-format qcow2 --container-format bare --private --file &lt;snapshot-file&gt;\n</code></pre></li> </ul>"},{"location":"openstack/vm_migration/#via-web-interface_1","title":"Via Web interface","text":"<p>Follow the instructions here</p>"},{"location":"openstack/vm_migration/#create-a-new-instance-from-the-snapshot","title":"Create a new instance from the snapshot","text":""},{"location":"openstack/vm_migration/#via-cli_2","title":"Via CLI","text":"<p>Launch an instance <pre><code>openstack server create --flavor m1.medium --image myInstanceSnapshot --network dmznet myNewInstance\n</code></pre></p>"},{"location":"openstack/vm_migration/#via-web-interface_2","title":"Via Web Interface","text":"<p>Follow the instructions here</p>"},{"location":"service/service_setup/","title":"Service Setup","text":"<p>These instructions should be used when you have finished building your application on cloud.rc, and are ready to publish your application to be used outside campus.</p>"},{"location":"service/service_setup/#firewall-exception","title":"Firewall Exception","text":"<p>When you are ready to open ports to your application instance to the world, use the following steps: * Go here * Click on Security Exception (Firewall Rule Change). * Fill out the form:</p> <pre><code>`Requester BlazerID`\n\nFill out your blazerid. If you're making the request on someone else's behalf then use their blazerid.\n\n`Application Name`\n\nSpecify the application name or the DNS entry for your application i.e. docs.uabgrid.uab.edu\n\n`Source IP Addresses`\n\nIf your application would interact with particular IPs, then mention them here with a comma separator. If it should be open to anyone outside campus then use ``Any``\n\n`Destination IP Addresses`\n\nIP Address of your OpenStack instance.\n\n`Destination TCP Port List`\n\nPort that needs to be open. In case of a webapp request, you need to open 80,443\n\n`Destination UDP Port List (Enter N/A if not applicable)`\n\nN/A\n\n`Other Protocols (Enter N/A if not applicable)`\n\nN/A\n\n`System/Application Information`\n\nCheck all that apply.\n\n`What type of sensitive or restricted data is stored or processed?`\n\nCheck all that apply.\n\n`Select number of months needed for exception`\n\nSelect as needed. 12 months is the maximum allowed timeline.\n\n`Justification/Description`\n\nSpecify the reason you want to apply for security exception, and how the application would be used.\n</code></pre> <ul> <li>Hit <code>Submit</code> button.</li> </ul>"},{"location":"service/service_setup/#dns-record-setup","title":"DNS Record setup","text":"<p>Email AskIT, and specify that you want to create a new A record for the IP address of you instance, and the DNS entry you requested a SSL certificate for.</p>"}]}